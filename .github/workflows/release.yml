name: Main Workflow

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Get Yarn cache path
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Checkout branch
        uses: actions/checkout@v3
        with:
          node-version: 16
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Load Yarn cache
        uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install
        env:
          CI: true

      - name: Build packages
        run: yarn build

      # - name: Create release Pull Request or publish to NPM
      #   id: changesets
      #   uses: changesets/action@v1
      #   with:
      #     publish: yarn release
      #     commit: "ci(changesets): version packages"
      #     title: "ci(changesets): version packages"
      #   env:
      #     NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Update changelog
      #   if: steps.changesets.outputs.published == 'true'
      #   run: |
      #     yarn changelog:write
      #     yarn changelog:commit
